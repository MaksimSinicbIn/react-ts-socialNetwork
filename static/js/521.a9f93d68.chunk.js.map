{"version":3,"file":"static/js/521.a9f93d68.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/users/Users.module.css?d05c","webpack://samurai-way/./src/components/common/paginator/Paginator.module.css?8828","components/common/paginator/Paginator.tsx","components/users/User.tsx","components/users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/users/UsersContainer.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userList\":\"Users_userList__vw8CT\",\"userItem\":\"Users_userItem__8XpF1\",\"userAvatar\":\"Users_userAvatar__lHKno\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__SA8E9\",\"selector\":\"Paginator_selector__RCmTB\"};","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport s from './Paginator.module.css'\r\n\r\ntype PaginationPropsType = {\r\n    currentPage: number,\r\n    totalUsersCount: number,\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const Paginator = ({ currentPage, totalUsersCount, pageSize, onPageChanged }: PaginationPropsType) => {\r\n\r\n    const [startPage, setStartPage] = useState(1)\r\n    const [endPage, setEndPage] = useState(1)\r\n\r\n    const prevPageHandler = () => {\r\n        if (startPage > 0) {\r\n            setStartPage(startPage - 1)\r\n            setEndPage(endPage - 1)\r\n            onPageChanged(startPage - 1)\r\n        }\r\n    }\r\n    const nextPageHandler = () => {\r\n        if (endPage <= pagesCount) {\r\n            setStartPage(startPage + 1)\r\n            setEndPage(endPage + 1)\r\n            onPageChanged(startPage + 1)\r\n        }\r\n    }\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = []\r\n    for (let i = startPage; i <= endPage && i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.selector}>\r\n            <button onClick={prevPageHandler}>-</button>\r\n            {pages.map((page) => {\r\n                const onClickPageHandler = () => { onPageChanged(page) }\r\n                return (\r\n                    <span key={page}\r\n                        className={currentPage === page ? s.selectedPage : ''}\r\n                        onClick={onClickPageHandler}>{startPage}</span>\r\n                )\r\n            })}\r\n            <button onClick={nextPageHandler}>+</button>\r\n        </div>\r\n    );\r\n};","import s from './Users.module.css'\r\nimport userPhoto from '../../assets/images/jizn.webp';\r\nimport { UserType } from \"../../redux/users-reducer\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User = ({ user, followingInProgress, follow, unfollow }: UserPropsType) => {\r\n\r\n    const onFollowClickHandler = () => { follow(user.id) }\r\n    const onUnFollowClickHandler = () => { unfollow(user.id) }\r\n\r\n    return (\r\n        <div className={s.userItem} key={user.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={`/profile/${user.id}`}>\r\n                        <img src={userPhoto} className={s.userAvatar} alt=\"\" />\r\n                    </NavLink>\r\n                </div>\r\n            </span>\r\n            <div>\r\n                {\r\n                    user.followed\r\n                        ? <button\r\n                            onClick={onUnFollowClickHandler}\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                        >Unfollow</button>\r\n                        : <button\r\n                            onClick={onFollowClickHandler}\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                        >Follow</button>\r\n                }\r\n            </div>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport s from './Users.module.css'\r\nimport { UsersPagePropsType } from './UsersContainer';\r\nimport { Paginator } from '../common/paginator/Paginator';\r\nimport { User } from './User';\r\n\r\n\r\n\r\nexport type UsersPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n} & UsersPagePropsType\r\n\r\n\r\nexport const Users = ({ users, currentPage, totalUsersCount, pageSize, followingInProgress, onPageChanged, ...props }: UsersPropsType) => {\r\n    return (\r\n        <>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n            />\r\n            <div className={s.userList}>\r\n                {\r\n                    users.map(u => <User\r\n                            key={u.id}\r\n                            user={u}\r\n                            followingInProgress={followingInProgress}\r\n                            unfollow={props.unfollow}\r\n                            follow={props.follow}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"reselect\";\r\nimport { AppRootStateType } from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppRootStateType) => state.usersPage.users\r\nexport const getUsers = createSelector(getUsersSelector, (users,) => {\r\n    return users.filter(u => true) // fake filter\r\n})\r\nexport const getPageSize = (state: AppRootStateType) => state.usersPage.pageSize\r\nexport const getTotalUsersCount = (state: AppRootStateType) => state.usersPage.totalUsersCount\r\nexport const getCurrentPage = (state: AppRootStateType) => state.usersPage.currentPage\r\nexport const getIsFetching = (state: AppRootStateType) => state.usersPage.isFetching\r\nexport const getFollowingInProgress = (state: AppRootStateType) => state.usersPage.followingInProgress","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport { Users } from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { follow, followSuccess, getRequestUsers, setCurrentPage, unfollow, unfollowSuccess, UserType } from '../../redux/users-reducer';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component<UsersPagePropsType> {\r\n\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props\r\n        this.props.getRequestUsers(currentPage, pageSize)\r\n    }\r\n    onPageChanged = (pageNumber: number) => {\r\n        const { pageSize } = this.props\r\n        this.props.getRequestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                {...this.props} // UsersPagePropsType\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    followSuccess: (userId: number) => void\r\n    unfollowSuccess: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    getRequestUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        followSuccess,\r\n        unfollowSuccess,\r\n        setCurrentPage,\r\n        getRequestUsers,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainer)","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Paginator","currentPage","totalUsersCount","pageSize","onPageChanged","useState","startPage","setStartPage","endPage","setEndPage","pagesCount","Math","ceil","pages","i","push","className","s","onClick","map","page","User","user","followingInProgress","follow","unfollow","to","id","src","userPhoto","alt","followed","disabled","some","name","status","Users","users","props","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","filter","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","getRequestUsers","this","Preloader","React","compose","connect","followSuccess","unfollowSuccess","setCurrentPage","_slicedToArray","arr","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}